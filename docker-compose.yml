services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: transfa-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-transfa}
      POSTGRES_USER: ${DB_USERNAME:-transfa}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-transfa2025}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-transfa} -d ${DB_NAME:-transfa}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - transfa-network
    restart: unless-stopped

  # Backend API
  # NOTE: TigerBeetle should be deployed separately in production
  # See guides/TIGERBEETLE.md for deployment guidance
  backend:
    image: ghcr.io/transfahq/transfa-api:latest
    container_name: transfa-api
    env_file: .env.backend
    environment:
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-transfa}
      DB_PASSWORD: ${DB_PASSWORD:-transfa2025}
      DB_NAME: ${DB_NAME:-transfa}
      CORE_POSTGRES_SCHEMA: ${CORE_POSTGRES_SCHEMA:-core}
      DB_MIGRATIONS_TABLE: ${DB_MIGRATIONS_TABLE:-core_migrations}
      DB_ENABLE_LOGGING: ${DB_ENABLE_LOGGING:-false}

    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - transfa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - "seccomp=unconfined"
  # Frontend
  frontend:
    image: ghcr.io/transfahq/transfa-web:latest
    container_name: transfa-web
    env_file: .env.frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - transfa-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  transfa-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local