/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */
import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Currencies {
  code: string;
  createdAt: Generated<Timestamp | null>;
  exponent: number;
  id: Generated<number>;
  name: string;
  updatedAt: Generated<Timestamp | null>;
}

export interface ExternalTransactions {
  amount: Numeric;
  createdAt: Generated<Timestamp>;
  currencyCode: string;
  date: Timestamp;
  deletedAt: Timestamp | null;
  id: Generated<string>;
  updatedAt: Generated<Timestamp>;
  vendorDescription: string | null;
  vendorId: string;
  vendorName: string;
}

export interface IdempotencyKeys {
  createdAt: Generated<Timestamp>;
  endpoint: string;
  externalId: string;
  id: Generated<number>;
  requestPayload: Json;
  responsePayload: Json;
  statusCode: number;
}

export interface Keys {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  id: Generated<string>;
  secret: string;
  updatedAt: Generated<Timestamp | null>;
}

export interface LedgerAccountMetadata {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  id: Generated<string>;
  key: string;
  ledgerAccountId: string;
  updatedAt: Generated<Timestamp | null>;
  value: string;
}

export interface LedgerAccounts {
  boundCheckAccountTigerBeetleId: Buffer | null;
  boundFundingAccountTigerBeetleId: Buffer | null;
  createdAt: Generated<Timestamp>;
  currencyCode: string;
  currencyExponent: number;
  deletedAt: Timestamp | null;
  description: string | null;
  externalId: string | null;
  id: Generated<string>;
  ledgerId: string;
  maxBalanceLimit: Numeric | null;
  minBalanceLimit: Numeric | null;
  name: string;
  normalBalance: string;
  tigerBeetleId: Buffer;
  updatedAt: Generated<Timestamp>;
}

export interface LedgerEntries {
  amount: Numeric;
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  direction: string;
  id: Generated<string>;
  ledgerAccountId: string;
  ledgerId: string;
  ledgerTransactionId: string;
  tigerBeetleId: Buffer;
  updatedAt: Generated<Timestamp>;
}

export interface LedgerEntryMetadata {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  id: Generated<string>;
  key: string;
  ledgerEntryId: string;
  updatedAt: Generated<Timestamp>;
  value: string;
}

export interface LedgerMetadata {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  id: Generated<string>;
  key: string;
  ledgerId: string;
  updatedAt: Generated<Timestamp | null>;
  value: string;
}

export interface Ledgers {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  description: string | null;
  id: Generated<string>;
  name: string;
  tigerBeetleId: Generated<number>;
  updatedAt: Generated<Timestamp>;
}

export interface LedgerTransactionMetadata {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  id: Generated<string>;
  key: string;
  ledgerTransactionId: string;
  updatedAt: Generated<Timestamp | null>;
  value: string;
}

export interface LedgerTransactions {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  description: string;
  effectiveAt: Generated<Timestamp>;
  externalId: string;
  id: Generated<string>;
  status: Generated<string>;
  tigerBeetleId: Buffer;
  updatedAt: Generated<Timestamp>;
}

export interface TigerbeetleAccounts {
  accountId: Buffer;
  code: number;
  createdAt: Generated<Timestamp>;
  creditsPending: Buffer;
  creditsPosted: Buffer;
  debitsPending: Buffer;
  debitsPosted: Buffer;
  flags: number;
  id: Generated<string>;
  ledger: number;
  ledgerAccountId: string | null;
  timestamp: Buffer | null;
  updatedAt: Generated<Timestamp>;
  userData128: Buffer | null;
  userData32: number | null;
  userData64: Buffer | null;
}

export interface TigerbeetleTransfers {
  amount: Int8;
  code: number;
  createdAt: Generated<Timestamp>;
  creditAccountId: Buffer;
  debitAccountId: Buffer;
  flags: number;
  id: Generated<string>;
  ledger: number;
  pendingId: Buffer | null;
  timeout: number | null;
  timestamp: Buffer | null;
  transferId: Buffer;
  updatedAt: Generated<Timestamp>;
  userData128: Buffer | null;
  userData32: number | null;
  userData64: Buffer | null;
}

export interface Users {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  email: string;
  id: Generated<string>;
  isActive: Generated<boolean | null>;
  password: string;
  updatedAt: Generated<Timestamp | null>;
}

export interface DB {
  currencies: Currencies;
  externalTransactions: ExternalTransactions;
  idempotencyKeys: IdempotencyKeys;
  keys: Keys;
  ledgerAccountMetadata: LedgerAccountMetadata;
  ledgerAccounts: LedgerAccounts;
  ledgerEntries: LedgerEntries;
  ledgerEntryMetadata: LedgerEntryMetadata;
  ledgerMetadata: LedgerMetadata;
  ledgers: Ledgers;
  ledgerTransactionMetadata: LedgerTransactionMetadata;
  ledgerTransactions: LedgerTransactions;
  tigerbeetleAccounts: TigerbeetleAccounts;
  tigerbeetleTransfers: TigerbeetleTransfers;
  users: Users;
}
